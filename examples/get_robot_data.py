from fairino import Robot
# 与机器人控制器建立连接，连接成功返回一个机器人对象
robot = Robot.RPC('192.168.58.2')

# 查询状态
ret = robot.GetRobotInstallAngle()
print("获取机器人安装角度", ret)
ret = robot.GetActualJointPosDegree()
print("获取当前关节位置 (角度)", ret)
ret = robot.GetActualJointPosRadian()
print("获取当前关节位置 (弧度)", ret)
ret = robot.GetActualJointSpeedsDegree()
print("获取关节反馈速度-deg/s", ret)
ret = robot.GetTargetTCPCompositeSpeed()
print("获取TCP指令合速度", ret)
ret = robot.GetActualTCPCompositeSpeed()
print("获取TCP反馈合速度", ret)
ret = robot.GetTargetTCPSpeed()
print("获取TCP指令速度", ret)
ret = robot.GetActualTCPSpeed()
print("获取TCP反馈速度", ret)
ret = robot.GetActualTCPPose()
print("获取当前工具位姿", ret)
ret = robot.GetActualTCPNum()
print("获取当前工具坐标系编号", ret)
ret = robot.GetActualWObjNum()
print("获取当前工件坐标系编号", ret)
ret = robot.GetActualToolFlangePose()
print("获取当前末端法兰位姿", ret)
ret = robot.GetJointTorques()
print("获取当前关节转矩", ret)
ret = robot.GetTargetPayload(0)
print("获取当前负载的质量", ret)
ret = robot.GetTargetPayloadCog(0)
print("获取当前负载的质心", ret)
ret = robot.GetRobotCurJointsConfig()
print("获取机器人当前关节配置", ret)
ret = robot.GetSystemClock()
print("获取系统时间", ret)
ret = robot.GetDefaultTransVel()
print("获取默认速度", ret)
ret = robot.GetTCPOffset()
print("获取当前工具坐标系", ret)
ret = robot.GetWObjOffset()
print("获取当前工件坐标系", ret)
ret = robot.GetJointSoftLimitDeg()
print("获取关节软限位角度", ret)
ret = robot.GetRobotMotionDone()
print("查询机器人运动是否完成", ret)
ret = robot.GetRobotErrorCode()
print("查询机器人错误码", ret)
ret = robot.GetRobotTeachingPoint("11")
print("查询机器人示教管理点位数据错误码", ret)




J1=[90.442,-100.149,-90.699,-60.347,90.580,-47.174]
P1=[70.414,368.526,338.135,-178.348,-0.930,52.611]
ret = robot.GetInverseKin(0,P1,config=-1)
print("逆运动学，笛卡尔位姿求解关节位置", ret)
ret = robot.GetInverseKinRef(0,P1,J1)
print("逆运动学，工具位姿求解关节位置，参考指定关节位置求解", ret)
ret = robot.GetInverseKinHasSolution(0,P1,J1)
print("逆运动学，工具位姿求解关节位置是否有解", ret)
ret = robot.GetForwardKin(J1)
print("正运动学，关节位置求解工具位姿", ret)
ret = robot.GetRobotInstallAngle()
print("获取机器人安装角度", ret)

ret = robot.GetSSHKeygen() #获取SSH
print("获取SSH", ret)
ret = robot.ComputeFileMD5("/fruser/11.lua")   #计算指定路径下文件的MD5值
print("计算指定路径下文件的MD5值", ret)
